# -*- coding: utf-8 -*-
"""Tutorial ML&DS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZSIhic83XhVR9BmlyU7BdsDb8Kwex2E7

# –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–±–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö —Å–∏—Å—Ç–µ–º

–í –ø–æ—Å–ª–µ–¥–Ω–∏–µ –≥–æ–¥—ã –≤—Å–µ –±–æ–ª—å—à–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–π –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞—É–∫–µ –Ω–∞—Ö–æ–¥—è—Ç –º–µ—Ç–æ–¥—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –º–∞—à–∏–Ω–Ω–æ–º 
–æ–±—É—á–µ–Ω–∏–∏ –∏ –Ω–∞—É–∫–µ –æ –¥–∞–Ω–Ω—ã—Ö. –í—ã—Å–æ–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ç–∞–∫–∏—Ö –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –¥–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö 
—É—Ä–∞–≤–Ω–µ–Ω–∏–π –∏ –∑–∞–¥–∞—á –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–µ–ª–∞–µ—Ç –∏—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã–º–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–∑–∏–∫–∏.
–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–∞—É—á–Ω—ã—Ö –∏ 
—É—á–µ–±–Ω—ã—Ö –ø—É–±–ª–∏–∫–∞—Ü–∏–π –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∫ –ø—Ä–æ–≥—Ä–∞–º–º–µ –∏ —É—Ä–æ–≤–Ω—é –∑–Ω–∞–Ω–∏–π —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö
—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π. –ö—Ä–æ–º–µ —Ç–æ–≥–æ, –≤ —Å–≤—è–∑–∏ —Å–æ —Å–ø–µ—Ü–∏—Ñ–∏–∫–æ–π –ø—Ä–µ–¥–º–µ—Ç–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö 
–ø—Ä–∞–∫—Ç–∏–∫—É–º–∞—Ö, –≤–∫–ª—é—á–∞—é—â–∏—Ö –≤ —Å–µ–±—è –∏—Å–ø–æ–ª–Ω—è–µ–º—ã–µ –∫–æ–¥—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π. 
–í —Å–≤—è–∑–∏ —Å —ç—Ç–∏–º, –∑–∞–¥–∞—á–∞ –ø–æ –æ—Ç–±–æ—Ä—É, –∞–Ω–∞–ª–∏–∑—É –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —É—á–µ–±–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è
—Ñ–∏–∑–∏–∫–æ–≤ —Ç—Ä–µ–±—É–µ—Ç —É—Ä–æ–≤–Ω—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–≥–æ –º–∞–≥–∏—Å—Ç—Ä–∞–Ω—Ç—É —Ñ–∏–∑–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.

# –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?

***–í–≤–µ–¥–µ–Ω–∏–µ –≤ –Ω–∞—É–∫—É –æ –¥–∞–Ω–Ω—ã—Ö –∏ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ***

[–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è](https://docs.google.com/presentation/d/1gI9u4XRER896o7MD280_rzwDBM6KWqyZGP_Nd0BCLks/edit#slide=id.g183f84a2175_0_24)

[–õ–µ–∫—Ü–∏—è](https://docs.google.com/document/d/1zVM2wSK54OMsoYJgZheGyhxYF3a4ZT6XnT5zGEHj9jM/edit)

[–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö](https://docs.google.com/presentation/d/1o1UkxS9FNtwr7CUGMHz5w2FOcim767vX/edit#slide=id.g207dc08dad8_0_222)

# –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞

–î–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏–∑—É—á–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –ø—É–Ω–∫—Ç—ã:


1.  [–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä Python](https://www.python.org/downloads/)

2.  [–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PyCharm](https://www.jetbrains.com/ru-ru/pycharm/) (–¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ Professional Edition) –∏–ª–∏ –¥—Ä—É–≥—É—é IDE

3.  [–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞ Anaconda (–ø–æ –∂–µ–ª–∞–Ω–∏—é)](https://www.anaconda.com/)

4.  –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å [Google Colaboratory](https://colab.research.google.com/) –∏–ª–∏ [Jupiter Notebook](https://jupyter.org/try) –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤–∞–º –Ω–µ –ø—Ä–∏–¥–µ—Ç—Å—è –ø—Ä–æ–¥–µ–ª—ã–≤–∞—Ç—å —à–∞–≥–∏ 1-3 :)

–î–ª—è –∑–∞–ø—É—Å–∫–∞ —è—á–µ–µ–∫ —Å –∫–æ–¥–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Shift + Enter –∏–ª–∏ play

# NumPy

NumPy

–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ NumPy (—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –æ—Ç Numerical Python ‚Äî ¬´—á–∏—Å–ª–æ–≤–æ–π Python¬ª) –æ–±–µ- —Å–ø–µ—á–∏–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏ —Ä–∞–±–æ—Ç—ã —Å –ø–ª–æ—Ç–Ω—ã–º–∏ –±—É—Ñ–µ—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö. –ú–∞—Å—Å–∏–≤—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ NumPy –ø–æ—Ö–æ–∂–∏ –Ω–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–∞ Python list, –Ω–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏ —Ä–æ—Å—Ç–µ —Ä–∞–∑–º–µ—Ä–∞ –º–∞—Å—Å–∏–≤–æ–≤. –ú–∞—Å—Å–∏–≤—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ NumPy —Ñ–æ—Ä–º–∏—Ä—É—é—Ç —è–¥—Ä–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã —É—Ç–∏–ª–∏—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö Python. –í—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–∞ –∏–∑—É—á–µ–Ω–∏–µ–º —Å–ø–æ—Å–æ–±–æ–≤ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–∫–µ—Ç–∞
NumPy, –Ω–µ –±—É–¥–µ—Ç –ø–æ—Ç—Ä–∞—á–µ–Ω–æ –≤–ø—É—Å—Ç—É—é –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å –∞—Å–ø–µ–∫- —Ç–∞ –Ω–∞—É–∫–∏ –æ –¥–∞–Ω–Ω—ã—Ö.

Numpy –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç  ùëõ -–º–µ—Ä–Ω—ã–µ –æ–¥–Ω–æ—Ä–æ–¥–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã (–≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞); –≤ –Ω–∏—Ö –Ω–µ–ª—å–∑—è –≤—Å—Ç–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ. –í numpy —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –º–Ω–æ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –º–∞—Å—Å–∏–≤–∞–º–∏ –≤ —Ü–µ–ª–æ–º. –ï—Å–ª–∏ –∑–∞–¥–∞—á—É –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å, –ø—Ä–æ–∏–∑–≤–µ–¥—è –Ω–µ–∫–æ—Ç–æ—Ä—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞–¥ –º–∞—Å—Å–∏–≤–∞–º–∏, —Ç–æ —ç—Ç–æ –±—É–¥–µ—Ç —Å—Ç–æ–ª—å –∂–µ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ, –∫–∞–∫ –≤ C –∏–ª–∏ matlab ‚Äî –ª—å–≤–∏–Ω–∞—è –¥–æ–ª—è –≤—Ä–µ–º–µ–Ω–∏ —Ç—Ä–∞—Ç–∏—Ç—Å—è –≤ –±–∏–±–ª–∏–æ—Ç–µ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö, –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –Ω–∞ C.

–ï—Å–ª–∏ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å NumPy —Å –¥—Ä—É–≥–∏–º –ü–û –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä MATLAB, —Ç–æ –≤ —Å–≤–æ–µ–π –æ–±–ª–∞—Å—Ç–∏ ‚Äî –ª–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞, –æ–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –≤–µ–∫—Ç–æ—Ä–∞–º–∏ (–º–∞—Å—Å–∏–≤–∞–º–∏) –∏ –º–∞—Ç—Ä–∏—Ü–∞–º–∏ ‚Äî ¬´–≥–µ—Ä–æ–π¬ª –Ω–∞—à–µ–π —Å—Ç–∞—Ç—å–∏ –ø–æ–∫—Ä—ã–≤–∞–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –Ω—É–∂–¥, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º—ã—Ö –ø–æ—Å–ª–µ–¥–Ω–∏–º, –∞ –≤ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–±–ª–∞—Å—Ç—è—Ö –¥–∞–∂–µ –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–∏—Ç –µ–≥–æ.

–ö–ª—é—á–µ–≤—ã–µ —Ä–∞–∑–ª–∏—á–∏—è NumPy –∏ MATLAB



1.   –í MATLAB –±–∞–∑–æ–≤—ã–π —Ç–∏–ø –¥–∞–∂–µ –¥–ª—è —Å–∫–∞–ª—è—Ä–Ω—ã—Ö (–≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, —á–∏—Å–ª–æ–≤—ã—Ö) –¥–∞–Ω–Ω—ã—Ö ‚Äî –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤.
–ú–∞—Å—Å–∏–≤—ã –≤ MATLAB —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞–∫ –¥–≤—É–º–µ—Ä–Ω—ã–µ –º–∞—Å—Å–∏–≤—ã –∏–∑ —á–∏—Å–µ–ª —Å –ø–ª–∞–≤–∞—é—â–µ–π —Ç–æ—á–∫–æ–π —Å –¥–≤–æ–π–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é, –∫—Ä–æ–º–µ —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≤—ã —Å–∞–º–∏ —É–∫–∞–∑—ã–≤–∞–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π –∏ —Ç–∏–ø. –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞–¥ –¥–≤—É–º–µ—Ä–Ω—ã–º–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞–º–∏ —ç—Ç–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤ –æ—Å–Ω–æ–≤—ã–≤–∞—é—Ç—Å—è –Ω–∞ –º–∞—Ç—Ä–∏—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏—è—Ö –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã.

*   MATLAB –Ω–∞—á–∏–Ω–∞–µ—Ç –Ω—É–º–µ—Ä–∞—Ü–∏—é (–∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é) –Ω–∞—á–∏–Ω–∞—è —Å 1; a(1) ‚Äî —ç—Ç–æ –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç.
*   –Ø–∑—ã–∫ —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤ (—Å–∫—Ä–∏–ø—Ç–æ–≤—ã–π —è–∑—ã–∫) MATLAB –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –ø—Ä–∏–≤—ã—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã, –ø–æ—ç—Ç–æ–º—É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π —Å –º–∞—Å—Å–∏–≤–∞–º–∏ –±–æ–ª–µ–µ –∫–æ–º–ø–∞–∫—Ç–Ω—ã–π, —á–µ–º –≤ NumPy.

*   –ù–∞—Ä–µ–∑–∞–Ω–∏–µ (slicing) –º–∞—Å—Å–∏–≤–æ–≤ –≤ MATLAB –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ–º–∞–Ω—Ç–∏–∫—É –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ —Å—Å—ã–ª–∫–µ, —Å ¬´–ª–µ–Ω–∏–≤—ã–º¬ª (–æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º) –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ–º –≤–æ –≤—Ä–µ–º—è –∑–∞–ø–∏—Å–∏, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ø–∏–π –¥–∞–Ω–Ω—ã—Ö –¥–æ –º–æ–º–µ–Ω—Ç–∞ –∫–æ–≥–¥–∞ –æ–Ω–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã. –û–ø–µ—Ä–∞—Ü–∏–∏ –Ω–∞—Ä–µ–∑–∞–Ω–∏—è –∫–æ–ø–∏—Ä—É—é—Ç —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞.




2.   –í NumPy, –±–∞–∑–æ–≤—ã–π —Ç–∏–ø ‚Äî —ç—Ç–æ –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤. –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Ç–∏–ø–∞ ¬´–º–∞—Å—Å–∏–≤¬ª –≤ NumPy –æ–±—ã—á–Ω–æ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ n-–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö —Å ¬´–º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º¬ª (–Ω–∞–∏–º–µ–Ω–µ–µ –∑–∞—Ç—Ä–∞—Ç–Ω–æ–º –≤ —Å–º—ã—Å–ª–µ –∑–∞–Ω–∏–º–∞–µ–º–æ–π –ø–∞–º—è—Ç–∏) —Ç–∏–ø–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –∫—Ä–æ–º–µ —Å–ª—É—á–∞–µ–≤, –∫–æ–≥–¥–∞ –≤—ã –∑–∞–¥–∞–µ—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑–º–µ—Ä–µ–Ω–∏–π –∏ —Ç–∏–ø.
NumPy –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, –ø–æ—ç—Ç–æ–º—É –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–∏–µ –¥–≤—É–º–µ—Ä–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤ –æ–ø–µ—Ä–∞—Ü–∏–µ–π ¬´*¬ª ‚Äî —ç—Ç–æ –Ω–µ –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü, —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —É–º–Ω–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞-–Ω–∞-—ç–ª–µ–º–µ–Ω—Ç. –û–ø–µ—Ä–∞—Ç–æ—Ä ¬´@¬ª, –¥–æ—Å—Ç—É–ø–Ω—ã–π –Ω–∞—á–∏–Ω–∞—è —Å –≤–µ—Ä—Å–∏–∏ Python 3.5, –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø—Ä–∏–≤—ã—á–Ω–æ–≥–æ –ø–µ—Ä–µ–º–Ω–æ–∂–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü.


*   NumPy, —Ç–∞–∫ –∂–µ –∫–∞–∫ Python –∏ –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—é —Å 0; –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º –±—É–¥–µ—Ç a[0].
*   NumPy –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ Python, —è–∑—ã–∫–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—â–µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è. –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ NumPy ‚Äî –≤ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–º –∏ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º –¥–æ—Å—Ç—É–ø–µ –∫ –ø–∏—Ç–æ–Ω–æ–≤—Å–∫–∏–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∞–º, –≤–∫–ª—é—á–∞—è SciPy, Matplotlib, Pandas, OpenCV, –∏ —Ç–∞–∫ –¥–∞–ª–µ–µ. –í–¥–æ–±–∞–≤–æ–∫, Python —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–æ–µ–Ω (embedded) –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–∫—Ä–∏–ø—Ç–æ–≤–æ–≥–æ —è–∑—ã–∫–∞ –≤ –¥—Ä—É–≥–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ –∏ –¥–∞–∂–µ –∞–ø–ø–∞—Ä–∞—Ç–Ω–æ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, NVIDIA CUDA) –æ–±–µ—Å–ø–µ—á–µ–Ω–∏–µ, —Ç–µ–º —Å–∞–º—ã–º –ø–æ–∑–≤–æ–ª—è—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å NumPy –≤ —ç—Ç–∏—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö.


*   –û–ø–µ—Ä–∞—Ü–∏—è –Ω–∞—Ä–µ–∑–∞–Ω–∏—è –≤ NumPy –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä–µ–¥–∞—á—É –ø–æ —Å—Å—ã–ª–∫–µ, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–ø–µ—Ä–∞—Ü–∏–π –Ω–∞—Ä–µ–∑–∞–Ω–∏—è –Ω–∞ —Å–∞–º–æ–º –¥–µ–ª–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (Views) –º–∞—Å—Å–∏–≤–æ–≤, –∞ –Ω–µ –∫–æ–ø–∏–∏ –º–∞—Å—Å–∏–≤–æ–≤.

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ NumPy
**Ubuntu Linux**
1.   sudo apt update -y
2.   sudo apt upgrade -y
3.   sudo apt install python3-tk python3-pip -y
4.   sudo pip install numpy -y

**Anaconda**
*   conda install -c anaconda numpy

** –ß–µ—Ä–µ–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª **
*   pip install numpy

–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —É—Å—Ç–∞–Ω–æ–≤–∫–µ:

*   [NumPy Pypi](https://pypi.org/project/numpy/)
*   [–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://numpy.org/)

# NumPy –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

**–ß—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ numpy —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –í—ã –º–æ–∂–µ—Ç–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ –∏ –≤—ã–∑–≤–∞—Ç—å –¥–∞–Ω–¥–µ—Ä –º–µ—Ç–æ–¥ __version__ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 2 –Ω–∏–∂–Ω–∏—Ö –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è)**
"""

import numpy
print(numpy.__version__)

"""**–ò–º–ø–æ—Ä—Ç NumPy –∫–∞–∫ np –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–æ–≤**

"""

import numpy as np

python_list = [1, 2, 3, 4, 5, 6]
numpy_array = np.array(python_list)

message = f"–°–ø–∏—Å–æ–∫ {python_list} –∏–º–µ–µ—Ç —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö - {type(python_list)}, –∞ —Å–æ–∑–¥–∞–Ω–Ω—ã–π \n –Ω–∞ –µ–≥–æ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤ numpy: {numpy_array} –∏–º–µ–µ—Ç —Ç–∏–ø {type(numpy_array)}" 

print(message)

"""**–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é arange**

np.arange(start, stop, step)

**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ**
–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –º—ã —Å–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—Ö–æ–∂–∏–º —Å–ø–æ—Å–æ–±–æ–º –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞–ª–∏ –±—ã –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å –ø–æ–º–æ—â—å—é range() –≤ —á–∏—Å—Ç–æ–º Python. –¢–∞–∫–∂–µ, —Å—Ç–æ–∏—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ ***stop*** –Ω–µ –≤–∫–ª—é—á–∞–µ—Ç—Å—è

"""

import numpy as np

flat_array = np.arange(5)

test_arr = np.arange(1, 10)

param_arr = np.arange(1, 1000, 50)

print(f"flat_array \n{flat_array}\n test_arr: \n{test_arr}\n param_arr \n{param_arr}")

"""
**–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã 3x3 –∏–∑ list –≤ numpy array**
"""

import numpy as np

test_matrix = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
  ]

numpy_matrix = np.array(test_matrix)
print(f"{test_matrix}={type(test_matrix)},\n{numpy_matrix}={type(numpy_matrix)}")

"""**–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞, —Å–æ—Å—Ç–æ—è—â–µ–≥–æ –∏–∑ –Ω—É–ª–µ–π**

np.zeros(i,j) - –≥–¥–µ i - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫, j - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–æ 0). –¢–∞–∫–∂–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–æ–∂–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å, 
dtype = int —Ç–æ–≥–¥–∞ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –±—É–¥—É—Ç –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç—å —Ç–∏–ø—É int

**–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ**
–ï—Å–ª–∏ –Ω–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –Ω—É–ª–µ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É —Å –Ω–µ–Ω—É–ª–µ–≤—ã–º j –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω–∏–π i,j —Å–ª–µ–¥—É–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –≤ —Ñ—É–Ω–∫—Ü–∏—é –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ i,j



"""

import numpy as np

flat_array = np.zeros(5, dtype= int)
zero_matrix = np.zeros((3,3), dtype = float)

print(f'{flat_array} - flat_array', "\n", f'\n zero_matrix: \n {zero_matrix}')

import numpy as np

flat_array = np.ones(5, dtype = float)
ones_matrix = np.ones((3,3), dtype= int)

print(f'{flat_array} - flat_array', "\n", f'\n ones_matrix: \n {ones_matrix}')

"""**–°–æ–∑–¥–∞–Ω–∏–µ –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏**
–í —Å–ª—É—á–∞–µ, –∫–æ–≥–¥–∞ –Ω–∞–º –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Ö–æ–¥—è—Ç –≤ –æ–¥–∏–Ω –¥–∏–∞–ø–∞–∑–æ–Ω —Ö–æ—Ä–æ—à–∏–º —Ä–µ—à–µ–Ω–∏–µ–º —Å—Ç–∞–Ω–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ ***linspace(start, stop, length)***, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é length = 50
"""

import numpy as np

fisrt_linsp = np.linspace(0,10,32)
second_linsp = np.linspace(0,10)

print(f'–õ–∏–Ω–µ–π–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: \n {fisrt_linsp}')
print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ = {len(fisrt_linsp)}")
print('------------------------------------------------')

print(f'–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ {second_linsp}')
print(f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–≤–Ω–æ {len(second_linsp)}')

"""**–°–æ–∑–¥–∞–Ω–∏–µ –µ–¥–∏–Ω–∏—á–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã**
np.eye(N), –≥–¥–µ N - —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å 
"""

import numpy as np

matrix = np.eye(3)
matrix

"""**–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏**

np.random.rand(i, j), –≥–¥–µ i - —Å—Ç—Ä–æ–∫–∏, j - —Å—Ç–æ–ª–±—Ü—ã(–µ—Å–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 0)
"""

import numpy as np

arr = np.random.rand(3,4)
print(type(arr),'\n', arr)

flat_arr = np.random.rand(3)
print('--------------------------')
print(type(flat_arr), '\n', flat_arr)

"""**–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —Ü–µ–ª—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏**

np.random.randint(start, stop, size)

–ü–∞—Ä–∞–º–µ—Ç—Ä size –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –≤ –≤–∏–¥–µ –∫–æ—Ä—Ç–µ–∂–∞ (i,j), –≥–¥–µ i,j —Å—Ç—Ä–æ–∫–∏ –∏ —Å—Ç–æ–ª–±—Ü—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.

"""

import numpy as np

matrix = np.random.randint(0,101, (4,5))
print(matrix)

"""**–ê—Ç—Ç—Ä–∏–±—É—Ç—ã –º–∞—Å—Å–∏–≤–∞ Numpy**

"""

import numpy as np

matrix = np.random.randint(0,10, (3,3))

"""# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –º–∞—Å—Å–∏–≤–∞ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ reshape

matrix.reshape(i, j)  
–≥–¥–µ matrix - –æ–±—ä–µ–∫—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ NumPy, –∞ i, j —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.

"""

import numpy as np

print('–ú–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º 10x10 \n')
matrix = np.random.randint(0, 100,(10,10))
print(matrix)
print('________________________ \n')

print('–ú–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º 25x4 \n')
arr = matrix.reshape(25,4)
print(arr)

print('________________________ \n')
print('–ú–∞—Å—Å–∏–≤ —Ä–∞–∑–º–µ—Ä–æ–º 4x25 \n')
arr = matrix.reshape(4,25)
print(arr)

"""# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

np.emty((rows, columns)), 
columns = 0 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
"""

import numpy as np

flat_arr = np.empty(4)
print(flat_arr)

print('\n –º–∞—Å—Å–∏–≤ 4x4 \n')
arr = np.empty((4,4))
print(arr)

"""# –ê—Ç—Ç—Ä–∏–±—É—Ç—ã –º–∞—Å—Å–∏–≤–∞ NumPy

"""

import numpy as np

arr = np.array([
    [1,2,3],
    [4,5,6],
    [7,8,9]
  ])


rang = arr.ndim
size = arr.size
shape = arr.shape
data_type = arr.dtype
bytes_number = arr.itemsize 
s = arr.sum()
min_elem = arr.min()
max_elem = arr.max()


info = {
  '–†–∞–Ω–≥ –º–∞—Ç—Ä–∏—Ü—ã': arr.ndim,
  '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã': size,
  '–†–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å –º–∞—Ç—Ä–∏—Ü—ã': shape,
  '–¢–∏–ø –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã': data_type,
  '–†–∞–∑–º–µ—Ä –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤–µ –≤ –±–∞–π—Ç–∞—Ö': bytes_number,
  '–°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤': s,
  '–ú–∏–Ω–∏–º–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç': min_elem,
  '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç': max_elem
}

print(info)

"""# –¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏  —Å –º–∞—Å—Å–∏–≤–∞–º–∏ NumPy


"""

import numpy as np


matrix = np.array([
    [1,0,1],
    [0,1,-1]
])

trigonometry_dictionary = {
    "sin_matrix": np.sin(matrix),
    "arcsin_matrix": np.arcsin(matrix),
    "cos_matrix": np.cos(matrix),
    "arccos_matrix": np.arccos(matrix),
    "tan_matrix": np.tan(matrix),
    "arctan_matrix": np.arctan(matrix)
}


for key, value in trigonometry_dictionary.items():
  print(key)
  print(value)
  print('--------------------------------------')

"""# **–ì–∏–ø–µ—Ä–±–æ–ª–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏**"""

import numpy as np


matrix = np.array([
    [0.5,0.9,0.7],
    [-0.8,0.3,-0.6]
])

hypertrig_dict = {
    "sinh(matrix)": np.sinh(matrix),
    "cosh(matrix)": np.cosh(matrix),
    "tanh(matrix)": np.tanh(matrix),
    "arcsinh(matrix)":np.arcsinh(matrix),
    "arccosh(matrix)":np.arccosh(np.array([1,1,1])),
    "arctanh(matrix)":np.arctanh(matrix),
}

for key, value in hypertrig_dict.items():
  print(key)
  print(value)
  print('--------------------------------------')

"""# NumPy –∏ –ª–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—è

–í NumPy –µ—Å—Ç—å –∫–ª–∞—Å—Å linalg, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –æ–ø–µ—Ä–∞—Ü–∏–∏ –ª–∏–Ω–µ–π–Ω–æ–π –∞–ª–≥–µ–±—Ä—ã
"""

import numpy as np

matrix = np.random.randint(0,10, (3,3))

determ = np.linalg.det(matrix)

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(matrix)
print("–û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ–ª—å —Ä–∞–≤–µ–Ω", determ)

"""#***–ë–∞–∑–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –º–∞—Å—Å–∏–≤–æ–º NumPy***
–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å, —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —Å–ª–æ–∂–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–Ω–∏–µ, —É–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü

# ***–£–º–Ω–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü***
"""

import numpy as np

A = np.random.randint(0,10, (3,3))

B = np.random.randint(0,10, (3,3))

C = np.dot(A,B)
print("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã")
print(A)
print("–Ω–∞ –º–∞—Ç—Ä–∏—Ü—É")
print(B)
print("–†–µ–∑—É–ª—å—Ç–∞—Ç: ")
print(C)


print("–¢–µ–ø–µ—Ä—å –ø–æ–º–µ–Ω—è–µ–º —Å–ª–∞–≥–∞–µ–º—ã–µ –º–µ—Å—Ç–∞–º–∏ –∏ —É–º–Ω–æ–∂–∏–º –≤—Ç–æ—Ä—É—é –º–∞—Ç—Ä–∏—Ü—É –Ω–∞ –ø–µ—Ä–≤—É—é")

print(np.dot(B,A))

"""# ***–¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü***

"""

import numpy as np

A = np.random.randint(0,10, (3,3))

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A)
print("–¢—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A.transpose())

"""# ***–í–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å***

np.linalg.matrix_power(A, n) - –≥–¥–µ A - —ç—Ç–æ –∏—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞, –∞ n - –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å—Ç–µ–ø–µ–Ω–∏
"""

import numpy as np

n = int(input("–í–≤–µ–¥–∏—Ç–µ n: "))

A = np.random.randint(0,10, (3,3))

B = np.linalg.matrix_power(A, n)

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A)

print(f"–ú–∞—Ç—Ä–∏—Ü–∞ –≤–æ–∑–≤–µ–¥–µ–Ω–Ω–∞—è –≤ —Å—Ç–µ–ø–µ–Ω—å {n}")
print(B)

"""# ***–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã***


–†–µ—à–∏–º –∑–∞–¥–∞—á—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã –Ω–∞ Python. 
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π
–º–∞—Ç—Ä–∏—Ü—ã –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é inv():
"""

import numpy as np

matrix = np.random.randint(0,10, (3,3))

inv_matrix = np.linalg.inv(matrix)

print(inv_matrix)

"""# ***QR-—Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã***

QR —Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –º–∞—Ç—Ä–∏—Ü—É A –≤ –≤–∏–¥–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è QR, –≥–¥–µ Q - —ç—Ç–æ –æ—Ä—Ç–æ–≥–æ–Ω–∞–ª—å–Ω–∞—è (—É–Ω–∏—Ç–∞—Ä–Ω–∞—è) –º–∞—Ç—Ä–∏—Ü–∞, –∞ R - —ç—Ç–æ –≤–µ—Ä—Ö–Ω–µ—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞.
"""

import numpy as np

A = np.random.randint(0,10, (3,3))

Q,R = np.linalg.qr(matrix)
print('–ú–∞—Ç—Ä–∏—Ü–∞ –ê')
print(A)
print('_____________')
print('–ú–∞—Ç—Ä–∏—Ü–∞ Q')
print(Q)
print('_____________')
print('–ú–∞—Ç—Ä–∏—Ü–∞ R')
print(R)

"""# ***–°–∏–Ω–≥—É–ª—è—Ä–Ω–æ–µ (SVD) —Ä–∞–∑–ª–æ–∂–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü—ã***

–§—É–Ω–∫—Ü–∏—è np.linalg.svd(matrix) –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ –∏–∑ —Ç—Ä–µ—Ö –∑–Ω–∞—á–µ–Ω–∏–π, –æ–±–æ–∑–Ω–∞—á–∏–º –∏—Ö –∫–∞–∫ U, S, Vh.
–¢–∞–∫ –∫–∞–∫ SVD –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –º–∞—Ç—Ä–∏—Ü—É A —Ä–∞–∑–º–µ—Ä–æ–º (m, n) –≤ –≤–∏–¥–µ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è 
A=UŒ£V‚àó

"""

import numpy as np

A = np.random.randint(0,10, (3,3))

U, S, Vh = np.linalg.svd(A)

print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê")

print("–†–µ–∑—É–ª—å—Ç–∞—Ç SVD:")

print("–ú–∞—Ç—Ä–∏—Ü–∞ U")
print(U)

print("–ú–∞—Ç—Ä–∏—Ü–∞ S")
print(S)

print("–ú–∞—Ç—Ä–∏—Ü–∞ Vh")
print(Vh)

"""# ***–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ Numpy***

–î–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ Numpy –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é average() –∏–ª–∏ mean().

–†–∞—Å—Å–º–æ—Ç—Ä–∏–º –ø—Ä–∏–º–µ—Ä –Ω–∏–∂–µ.
"""

import numpy as np

A = np.random.randint(0,10, (3,3))

avg = np.average(A)
m_avg = np.mean(A)

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A)
print("---------------")
print("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:", avg)
print("–°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é mean:", m_avg)

"""# ***–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–¥–æ–ª—å —É–∫–∞–∑–∞–Ω–Ω–æ–π –æ—Å–∏.***


–§—É–Ω–∫—Ü–∏—è std() –≤—ã—á–∏—Å–ª—è–µ—Ç —Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ) –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞.


"""

import numpy as np

A = np.random.randint(0,10, (3,3))

st_d = np.std(A)

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A)
print("---------------")
print("–°—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞")
print(st_d)

"""# ***–î–∏—Å–ø–µ—Ä—Å–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞***"""

import numpy as np

A = np.random.randint(0,10, (3,3))

v = np.var(A)

print("–ò—Å—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞")
print(A)
print("---------------")
print("–î–∏—Å–ø–µ—Ä—Å–∏—è –∑–Ω–∞—á–µ–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞")
print(v)

"""linalg.solve(a, b) - —Ä–µ—à–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É :\–ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π Ax = b.

# ***–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ö—Ä–æ–Ω–µ–∫–µ—Ä–∞***
"""

import numpy as np

A = np.random.randint(0,10, (1,2))
B = np.random.randint(0,10, (1,2))

kr = np.kron(A,B)
print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê")
print(A)

print("__________")
print("–ú–∞—Ç—Ä–∏—Ü–∞ B")
print(B)
print("__________")

print("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ö—Ä–æ–Ω–µ–∫–µ—Ä–∞")
print(kr)
print("__________")

#–ò–∑–º–µ–Ω–∏–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü

A = np.random.randint(0,10, (2,2))
B = np.random.randint(0,10, (3,2))

kr = np.kron(A,B)
print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê")
print(A)

print("__________")
print("–ú–∞—Ç—Ä–∏—Ü–∞ B")
print(B)
print("__________")

print("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ö—Ä–æ–Ω–µ–∫–µ—Ä–∞")
print(kr)
print("__________")


#–ò–∑–º–µ–Ω–∏–º —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü

A = np.random.randint(0,10, (3,3))
B = np.random.randint(0,10, (3,3))

kr = np.kron(A,B)
print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê")
print(A)

print("__________")
print("–ú–∞—Ç—Ä–∏—Ü–∞ B")
print(B)
print("__________")

print("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ö—Ä–æ–Ω–µ–∫–µ—Ä–∞")
print(kr)
print("__________")

"""# ***–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏***"""

import numpy as np

test_matrix_a = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
  ]

test_matrix_b = [
    [4,7,3],
    [1,2,9],
    [2,8,5]
  ]

# –ó–∞–ø–∏—Å—å –º–∞—Ç—Ä–∏—Ü –≤ —Ñ–∞–π–ª matrixes

A = np.array(test_matrix)
B = np.array(test_matrix)

np.save('matrixes', A, B)

print("–í —Ñ–∞–π–ª matrixes –∑–∞–ø–∏—Å–∞–Ω—ã –º–∞—Ç—Ä–∏—Ü—ã:")
print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê:")
print(A)
print("–ú–∞—Ç—Ä–∏—Ü–∞ B:")
print(B)


# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞

a = np.load('matrixes.npy')
b = np.load('matrixes.npy')
print("–ò–∑ —Ñ–∞–π–ª–∞ matrixes –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –º–∞—Ç—Ä–∏—Ü—ã:")
print("–ú–∞—Ç—Ä–∏—Ü–∞ –ê:")
print(a)
print("–ú–∞—Ç—Ä–∏—Ü–∞ B:")
print(b)

"""# ***Ufunc Numpy***

–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è (–∏–ª–∏ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω–æ ufunc) - —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –º–∞—Å—Å–∏–≤–∞–º–∏ ndarrays –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—è —à–∏—Ä–æ–∫–æ–≤–µ—â–∞—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –º–∞—Å—Å–∏–≤–æ–≤, –ø—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∏ —Ä—è–¥ –¥—Ä—É–≥–∏—Ö —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π. 
–¢–æ –µ—Å—Ç—å ufunc - —ç—Ç–æ ‚Äú–≤–µ–∫—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–∞—è‚Äù –æ–±–æ–ª–æ—á–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–¥–∞–µ—Ç —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö —Å–º. 
 [–û—Å–Ω–æ–≤—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π (ufunc)](https://numpy.org/doc/stable/user/basics.ufuncs.html#ufuncs-basics)

–í—Å–µ ufuncs –∏–º–µ—é—Ç —á–µ—Ç—ã—Ä–µ –º–µ—Ç–æ–¥–∞. –ò—Ö –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ [Methods](https://numpy.org/doc/stable/reference/ufuncs.html#ufuncs-methods). –û–¥–Ω–∞–∫–æ —ç—Ç–∏ –º–µ—Ç–æ–¥—ã –∏–º–µ—é—Ç —Å–º—ã—Å–ª —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∫–∞–ª—è—Ä–Ω—ã—Ö ufuncs, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–≤–∞ –≤—Ö–æ–¥–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –æ–¥–∏–Ω –≤—ã—Ö–æ–¥–Ω–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç. –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–∑–≤–∞—Ç—å —ç—Ç–∏ –º–µ—Ç–æ–¥—ã –≤ –¥—Ä—É–≥–∏—Ö ufuncs –≤—ã–∑–æ–≤–µ—Ç ValueError.

# ***–ó–∞—á–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Ufuncs?***
ufuncs –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ NumPy, —á—Ç–æ –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ, —á–µ–º –ø–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–û–Ω–∏ —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç —à–∏—Ä–æ–∫–æ–≤–µ—â–∞—Ç–µ–ª—å–Ω—É—é –ø–µ—Ä–µ–¥–∞—á—É –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ —É–º–µ–Ω—å—à–µ–Ω–∏–µ, –Ω–∞–∫–æ–ø–ª–µ–Ω–∏–µ –∏ —Ç.–¥., –ö–æ—Ç–æ—Ä—ã–µ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω—ã –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

ufuncs —Ç–∞–∫–∂–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, —Ç–∞–∫–∏–µ –∫–∞–∫:

where - boolean array or condition defining where the operations should take place.
–î–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç True (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), False –∏–ª–∏ –º–∞—Å—Å–∏–≤ –ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏—Ö –º–∞—Å—Å–∏–≤–æ–≤. –ó–Ω–∞—á–µ–Ω–∏–µ True —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ out –º–∞—Å—Å–∏–≤. –í —Å–ª—É—á–∞–µ —É–∫–∞–∑–∞–Ω–∏—è False, –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ out.

–ü–∞—Ä–∞–º–µ—Ç—Ä where –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –ø–æ–ª–µ–∑–µ–Ω, –≤ —Å–∏—Ç—É–∞—Ü–∏—è—Ö –∫–æ–≥–¥–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ —É—Å–ª–æ–≤–∏—è. –ù–∞–ø—Ä–∏–º–µ—Ä, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ c, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–µ–∫–æ—Ç–æ—Ä–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞.

dtype -  defining the return type of elements. –ü–æ–∑–≤–æ–ª—è–µ—Ç –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö –≤—ã—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.





out - output array where the return value should be copied. –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–µ—Å—Ç–æ –≤ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä –Ω–µ —É–∫–∞–∑–∞–Ω –∏–ª–∏ —É–∫–∞–∑–∞–Ω–æ None (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é), —Ç–æ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤. –ï—Å–ª–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —É–∫–∞–∑–∞–Ω –º–∞—Å—Å–∏–≤ NumPy, —Ç–æ –æ–Ω –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ñ–æ—Ä–º—É —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é —Å —Ñ–æ—Ä–º–æ–π –≤—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤—ã—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤, —Ç–æ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –Ω–∏—Ö –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –º–µ—Å—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –∫–æ—Ä—Ç–µ–∂–∞ –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤ NumPy –∏–ª–∏ None.

–î–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ –±–æ–ª—å—à–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö, —Ç–∞–∫ –∫–∞–∫ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –∑–∞–ø–∏—Å—ã–≤–∞—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ —Ç–æ –º–µ—Å—Ç–æ –ø–∞–º—è—Ç–∏ –≤ –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.

# ***–ß—Ç–æ —Ç–∞–∫–æ–µ –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏—è?***
–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π –≤ –≤–µ–∫—Ç–æ—Ä–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π.

–≠—Ç–æ –±—ã—Å—Ç—Ä–µ–µ, –ø–æ—Å–∫–æ–ª—å–∫—É —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —Ç–∞–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π.

# ***–°–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤***
"""

x = [1, 2, 3, 4]
y = [4, 5, 6, 7]
z = []

for i, j in zip(x, y):
  z.append(i + j)
print(z)

"""# ***–°–ª–æ–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é ufunc***


"""

import numpy as np

x = [1, 2, 3, 4]
y = [4, 5, 6, 7]
z = np.add(x, y)

print(z)

"""# ***–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π ufunc***

–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π ufunc, –≤—ã –¥–æ–ª–∂–Ω—ã –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–∞–∫ –≤—ã –¥–µ–ª–∞–µ—Ç–µ —Å –æ–±—ã—á–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –≤ Python, –∑–∞—Ç–µ–º –≤—ã –¥–æ–±–∞–≤–ª—è–µ—Ç–µ –µ–µ –≤ —Å–≤–æ—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É NumPy ufunc —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ frompyfunc().

# ***–ú–µ—Ç–æ–¥ frompyfunc() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã:***

function - –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏.

inputs - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ö–æ–¥–Ω—ã—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ (–º–∞—Å—Å–∏–≤–æ–≤).

outputs - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–æ–≤.
"""

import numpy as np

def custom_multiply(x, y):
  return x*y

custom_ufunc = np.frompyfunc(custom_multiply, 2, 1)

print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∏–ø–∞: {type(custom_ufunc)}, —è–≤–ª—è–µ—Ç—Å—è {custom_ufunc([1, 2, 3, 4], [5, 6, 7, 8])}")

"""# ***Subtraction***"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([20, 21, 22, 23, 24, 25])

result = np.subtract(arr1, arr2)

print(result)

"""# ***Multiplication***

"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([20, 21, 22, 23, 24, 25])

result = np.multiply(arr1, arr2)

print(result)

"""# ***Division***"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([3, 5, 10, 8, 2, 33])

result = np.divide(arr1, arr2)

print(result)

"""# ***Power***"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([3, 5, 6, 8, 2, 33])

res = np.power(arr1, arr2)

print(res)

"""# ***Remainder***"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([3, 7, 9, 8, 2, 33])

newarr = np.mod(arr1, arr2)

print(newarr)

"""# ***Quotient and Mod***"""

import numpy as np

arr1 = np.array([10, 20, 30, 40, 50, 60])
arr2 = np.array([3, 7, 9, 8, 2, 33])

res = np.divmod(arr1, arr2)

print(res)

"""
# ***Absolute Values***"""

import numpy as np

arr = np.array([-1, -2, 1, 2, 3, -4])

res = np.absolute(arr)

print(res)

"""# ***–û–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –¥—Ä–æ–±–µ–π***
–í NumPy —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—è—Ç—å —Å–ø–æ—Å–æ–±–æ–≤ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –¥—Ä–æ–±–µ–π:

*   truncation
*   fix
*   rounding
*  floor
*   ceil

# ***Truncation***
"""

import numpy as np

arr = np.trunc([-7.12592, 4.12592])

print(arr)

import numpy as np

arr = np.fix([-7.12592, 4.12592])

print(arr)

"""# ***Rounding***"""

import numpy as np

arr = np.around(4.12592, 3)

print(arr)

"""# ***Floor***


"""

import numpy as np

arr = np.floor([4.12592, -7.12592])

print(arr)

"""# ***Ceil***"""

import numpy as np

arr = np.ceil([4.12592, -7.12592])

print(arr)

"""# ***–õ–æ–≥–∞—Ä–∏—Ñ–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å NumPy***

***–õ–æ–≥–∞—Ä–∏—Ñ–º —Å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º 2***
"""

import numpy as np

arr = np.arange(1, 10)

print(np.log2(arr))

"""***–õ–æ–≥–∞—Ä–∏—Ñ–º —Å –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º 10*** """

import numpy as np

arr = np.arange(1, 10)

print(np.log10(arr))

"""***–ù–∞—Ç—É—Ä–∞–ª—å–Ω—ã–π –ª–æ–≥–∞—Ä–∏—Ñ–º*** """

import numpy as np

arr = np.arange(1, 10)

print(np.log(arr))

"""# ***–õ–æ–≥–∞—Ä–∏—Ñ–º —Å –ª—é–±—ã–º –æ—Å–Ω–æ–≤–∞–Ω–∏–µ–º***"""

from math import log
import numpy as np

nplog = np.frompyfunc(log, 2, 1)

print(nplog(81, 3))

"""# ***–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ***

–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é prod().

"""

import numpy as np

arr = np.array([1, 2, 3, 4])

x = np.prod(arr)

print(x)

import numpy as np

arr1 = np.array([1, 2, 3, 4])
arr2 = np.array([5, 6, 7, 8])

res = np.prod([arr1, arr2])

print(res)

"""# ***NumPy Differences***"""

import numpy as np

arr = np.array([10, 15, 25, 5])

res = np.diff(arr)

print(res)

# [5 10 -20] –ø–æ—Ç–æ–º—É —á—Ç–æ 15-10=5, 25-15=10, –∏ 5-25=-20

import numpy as np

arr = np.array([10, 15, 25, 5])

res = np.diff(arr, n=2)

print(res)
# [5 -30] –ø–æ—Ç–æ–º—É —á—Ç–æ: 15-10=5, 25-15=10, –∏ 5-25=-20 –∏ 10-5=5 –∏ -20-10=-30

"""# ***NumPy LCM Lowest Common Multiple***

–ù–∞–∏–º–µ–Ω—å—à–µ–µ –æ–±—â–µ–µ –∫—Ä–∞—Ç–Ω–æ–µ
"""

import numpy as np

num1 = 10
num2 = 20

x = np.lcm(num1, num2)

print(x)

import numpy as np

arr = np.array([3, 6, 9])

x = np.lcm.reduce(arr)

print(x)
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: 18, –ø–æ—Ç–æ–º—É —á—Ç–æ —ç—Ç–æ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ –æ–±—â–µ–µ –∫—Ä–∞—Ç–Ω–æ–µ –∏–∑ –≤—Å–µ—Ö —Ç—Ä–µ—Ö —á–∏—Å–µ–ª (3*6=18, 6*3=18 –∏ 9*2=18).

"""# ***NumPy GCD Greatest Common Denominator***

–ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å
"""

import numpy as np

num1 = 6
num2 = 9

x = np.gcd(num1, num2)

print(x)

import numpy as np

arr = np.array([20, 8, 32, 36, 16])

res = np.gcd.reduce(arr)

print(res)

"""# ***NumPy Set Operations***

# **–ß—Ç–æ —Ç–∞–∫–æ–µ –º–Ω–æ–∂–µ—Å—Ç–≤–æ?**
–ú–Ω–æ–∂–µ—Å—Ç–≤–æ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ - —ç—Ç–æ –Ω–∞–±–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

–ù–∞–±–æ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π, –≤–∫–ª—é—á–∞—é—â–∏—Ö —á–∞—Å—Ç—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è, –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –∏ —Ä–∞–∑–Ω–æ—Å—Ç–∏.

# ***–°–æ–∑–¥–∞–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞***
"""

import numpy as np

arr = np.array([1, 1, 1, 2, 3, 4, 5, 5, 6, 7])

x = np.unique(arr)

print(x)

"""***–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ union()***"""

import numpy as np

arr1 = np.array([1, 2, 3, 4])
arr2 = np.array([3, 4, 5, 6])

res = np.union1d(arr1, arr2)

print(res)

"""# ***–ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –º–Ω–æ–∂–µ—Å—Ç–≤***

"""

import numpy as np

arr1 = np.array([1, 2, 3, 4])
arr2 = np.array([3, 4, 5, 6])

res = np.intersect1d(arr1, arr2, assume_unique=True)

print(res)

"""# ***Finding Difference***

–ß—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Ç–æ–ª—å–∫–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø–µ—Ä–≤–æ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç –≤–æ –≤—Ç–æ—Ä–æ–º –º–Ω–æ–∂–µ—Å—Ç–≤–µ, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ—Ç–æ–¥ setdiff1d().
"""

import numpy as np

set1 = np.array([1, 2, 3, 4])
set2 = np.array([3, 4, 5, 6])

res = np.setdiff1d(set1, set2, assume_unique=True)

print(res)

"""# ***Symmetric Difference***"""

import numpy as np

set1 = np.array([1, 2, 3, 4])
set2 = np.array([3, 4, 5, 6])

res = np.setxor1d(set1, set2, assume_unique=True)

print(res)

"""# ***–¢—Ä–∏–≥–æ–Ω–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ NumPy***"""

import numpy as np

x = np.sin(np.pi/2)
y = np.cos(np.pi/2)
z = np.tan(np.pi/2)

x,y,z

import numpy as np

arr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])
x = np.sin(arr)
print(x)

"""# ***–ü–µ—Ä–µ–≤–æ–¥ –≥—Ä–∞–¥—É—Å–æ–≤ –≤ —Ä–∞–¥–∏–∞–Ω—ã NumPy***

"""

import numpy as np
arr = np.array([90, 180, 270, 360])
x = np.deg2rad(arr)

print(x)

"""# ***–ü–µ—Ä–µ–≤–æ–¥ —Ä–∞–¥–∏–∞–Ω –≤ –≥—Ä–∞–¥—É—Å—ã NumPy***"""

import numpy as np

arr = np.array([np.pi/2, np.pi, 1.5*np.pi, 2*np.pi])

x = np.rad2deg(arr)

print(x)

"""# ***–ü–æ–∏—Å–∫ —É–≥–ª–æ–≤***"""

import numpy as np

x = np.arcsin(1.0)
y = np.arccos(1.0)
z = np.arctan(1.0)

x,y,z

"""# ***–ü–æ–∏—Å–∫ —É–≥–ª–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞***"""

import numpy as np

arr = np.array([1, -1, 0.1])

x = np.arcsin(arr)

print(x)

"""# ***–í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≥–∏–ø–æ—Ç–µ–Ω—É–∑—ã***"""

import numpy as np

base = 3
perp = 4

x = np.hypot(base, perp)

print(x)

"""
# ***–ì–∏–ø–µ—Ä–±–æ–ª–∏—á–µ—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏***"""

import numpy as np

x = np.sinh(np.pi/2)
y = np.cosh(np.pi/2)
z = np.tanh(np.pi/2)

x,y,z

"""# ***–í—ã–∏—Å–ª–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏–π –≥–∏–ø–µ—Ä–±–æ–ª–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞***"""

import numpy as np

arr = np.array([np.pi/2, np.pi/3, np.pi/4, np.pi/5])

x = np.sinh(arr)
y = np.cosh(arr)
z = np.tanh(arr)

x,y,z

"""# ***–ü–æ–∏—Å–∫ —É–≥–ª–æ–≤***"""

import numpy as np

x = np.arcsinh(1.0)
y = np.arccosh(1.0)
z = np.arctanh(0.7)

x,y,z

"""# ***–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–≥–ª–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –º–∞—Å—Å–∏–≤–µ***"""

import numpy as np

arr = np.array([0.3, 0.2, 0.5])

x = np.arcsinh(arr)
y = np.arccosh(np.array([1, 1, 1]))
z = np.arctanh(arr)

x,y,z

"""# ***–ó–ê–î–ê–ù–ò–ï –ü–û –†–ê–ó–î–ï–õ–£ NumPy***

1.   –ë—É–¥–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —Å —á–∏—Å–ª–∞–º–∏ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞.  

2.   –ë—É–¥–µ—Ç –°–õ–ê–£ –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —Ä–µ—à–∏—Ç—å –º–µ—Ç–æ–¥–æ–º –ì–∞—É—Å—Å–∞/–ö—Ä–∞–º–µ—Ä–∞. 

3.   –†–µ—à–∏—Ç—å –ª–∏–Ω–µ–π–Ω–æ–µ —Ç–µ–Ω–∑–æ—Ä–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ

4.   –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –¥–ª—è –ª–∏–Ω–µ–π–Ω–æ–≥–æ –º–∞—Ç—Ä–∏—á–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è.

5.   –ë—É–¥–µ—Ç CSV —Ñ–∞–π–ª —Å –Ω–∞–±–æ—Ä–æ–º –∏–∑–º–µ—Ä–µ–Ω–∏–π. –ù—É–∂–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –¥–∏—Å–ø–µ—Ä—Å–∏—é, —Å—Ä–µ–¥–Ω–µ–∫–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ, –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—É –∏ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤.


–ù—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª (–≤ —Ñ–∞–π–ª–µ –µ—Å—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–¥–∞–Ω–∏–π 1-4) –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è –≤ –µ–¥–∏–Ω—ã–π —Ñ–∞–π–ª –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ.

–î–ª—è –∑–∞–¥–∞–Ω–∏—è 5 –≤—Å–µ —Ç–æ –∂–µ —Å–∞–º–æ–µ —Ç–æ–ª—å–∫–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç CSV –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç .txt —Ñ–∞–π–ª + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º–æ–π + –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ä–µ—à–µ–Ω–∏–µ–º –∑–∞–¥–∞—á–∏ –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–º–µ–Ω—å—à–∏—Ö –∫–≤–∞–¥—Ä–∞—Ç–æ–≤.

#***–ö–û–ù–¢–†–û–õ–¨–ù–´–ï –í–û–ü–†–û–°–´***

1.   –ö–∞–∫–∏–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç NumPy?
2.   –ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ? –ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ?
3.   –ß—Ç–æ —Ç–∞–∫–æ–µ –Ω–∞—É–∫–∞ –æ –¥–∞–Ω–Ω—ã—Ö? –ì–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ?
4.   –ù—É–∂–Ω—ã –ª–∏ —Ñ–∏–∑–∏–∫—É, –Ω–∞ –í–∞—à –≤–∑–≥–ª—è–¥, –Ω–∞–≤—ã–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–∞—É–∫–∏ –æ –¥–∞–Ω–Ω—ã—Ö? –ü–æ—á–µ–º—É?

# Pandas

[–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–±–Ω–∏–∫](https://colab.research.google.com/drive/1dHCXHce6TerFQNnnL6U1NxvBUbnEpscP#scrollTo=I0nAGPZ0EGu1)

[–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è](https://docs.google.com/presentation/d/1k3ZtgcxQE8nkELOy2UJJdjHiMvcr301aWmLWqeAvqeQ/edit#slide=id.g1bc00e5c921_2_661)

[–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://pandas.pydata.org/)

# Matplotlib

[–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–±–Ω–∏–∫](https://colab.research.google.com/drive/1pNRfVksVBfXwje2jSPgkkqJEcilaYHXD#scrollTo=lBSOR2jXOJ88)

[–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è](https://docs.google.com/presentation/d/1HnMsELAZ5AQsPIewYWgvVBFYOzJ2lbkFsZNRsLTsPwk/edit#slide=id.p)

[–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://matplotlib.org/)

#Seaborn

[–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —É—á–µ–±–Ω–∏–∫](https://colab.research.google.com/drive/1F6bZK7MyzvZheZEWPcCNib9Iv2sij4Rw)

[–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è](https://docs.google.com/presentation/d/1uUEZ8r6bx3KtTJ4LV8XxBWwoFec8MljjCfA7UqX_T1M/edit#slide=id.g181bfb9cb2c_0_83)

[–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è](https://seaborn.pydata.org/)

# ***–ü–æ–ª–µ–∑–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ä–∞–±–æ—Ç –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —ç–∫–∑–∞–º–µ–Ω—É***

1.   Data Science. –ù–∞—É–∫–∞ –æ –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è (–î–∂–æ—ç–ª –ì—Ä–∞—Å)

2.   –ü—Ä–∏–∫–ª–∞–¥–Ω–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é scikit-learn –∏ tensorflow 

3.   Python –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á (–î–∂. –í–∞–Ω–¥–µ—Ä –ü–ª–∞—Å)

4.   –õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞ –Ω–∞ Python (Devpractise team)

2.   Data driven science and engineering. Machine learning, dynamical systems and control (Steven L. Brunton, J. Nathan Kutz)

  # **[–°—Å—ã–ª–∫–∞ –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –∫–Ω–∏–≥](https://drive.google.com/drive/folders/1mpl_J1kqxaVPoewaNZnwbyifBKJWY1p8?usp=sharing)**
"""